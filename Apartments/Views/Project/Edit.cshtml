@model Apartments.Project

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm( // ekstenzijska funkcija
    "Edit", // action
    "Project", // controller
    null, // route values ne saljem jer mi defaultna ruta sve pokriva
    FormMethod.Post, // metoda
    new { enctype = "multipart/form-data" }
    ))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Project</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.IDProject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IDProject,
           new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div> <!-- Edit se može samo čitati, zato readonly -->
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserIDUser, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserIDUser,
           new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    @foreach (var uploadedFile in Model.UploadedProjects)
    {
        <div class="form-group">

            <span class="control-label col-md-2">
                <strong>@uploadedFile.Name</strong> <br/>
                @Ajax.ActionLink(
                    "Delete", // tekst
                    "Delete", // action
                    "File", // controller
                    new { id = uploadedFile.IDUploadedProject },
                    new AjaxOptions()
                    {
                        HttpMethod = "Post"
                    }
                    )
            </span>

            <div class="col-md-10">
                <img src="~/File?id=@uploadedFile.IDUploadedProject"
                     width="300" height="200" alt="Picture" />
            </div>
        </div>
    }

    <div class="form-group">
        @Html.Label("Project step", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" multiple id="Picture" name="files" accept="image/*" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
